<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
	version="2.0">
	<namespace>http://bootsfaces.net/ui</namespace>
	
	<tag>
		<tag-name>inputText</tag-name>
		<component>
			<component-type>net.bootsfaces.component.inputText.InputText</component-type>
		</component>
		
	  <attribute>
	  	<description><![CDATA[Access key to transfer focus to the input element.]]></description>
	  	<name>accesskey</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Alternate textual description of the input element.]]></description>
	  	<name>alt</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Controls browser autocomplete behavior.]]></description>
	  	<name>autocomplete</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
	  	<name>binding</name>
	  	<required>false</required>
	  	<type>javax.faces.component.UIComponent</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.]]></description>
	  	<name>converter</name>
	  	<required>false</required>
	  	<type>java.faces.convert.Converter</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Message to display when conversion fails.]]></description>
	  	<name>converterMessage</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Direction indication for text that does not inherit directionality.]]></description>
	  	<name>dir</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Disables the input element, default is false.]]></description>
	  	<name>disabled</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The size of the input. Possible values are xs (extra small), sm (small), md (medium) and lg (large) .]]></description>
	  	<name>fieldSize</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
	  	<name>id</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase. Default is false.]]></description>
	  	<name>immediate</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The label of the field.]]></description>
	  	<name>label</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[A localized user presentable name.]]></description>
	  	<name>lang</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The maximum length of the input.]]></description>
	  	<name>maxlength</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when input element loses focus.]]></description>
	  	<name>onblur</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when input element loses focus and its value has been modified since gaining focus.]]></description>
	  	<name>onchange</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[OnClick DHTML event .]]></description>
	  	<name>onclick</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when input element is double clicked.]]></description>
	  	<name>ondblclick</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when input element receives focus.]]></description>
	  	<name>onfocus</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a key is pressed down over input element.]]></description>
	  	<name>onkeydown</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a key is pressed and released over input element.]]></description>
	  	<name>onkeypress</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a key is released over input element.]]></description>
	  	<name>onkeyup</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a pointer input element is pressed down over input element.]]></description>
	  	<name>onmousedown</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a pointer input element is moved within input element.]]></description>
	  	<name>onmousemove</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a pointer input element is moved away from input element.]]></description>
	  	<name>onmouseout</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a pointer input element is moved onto input element.]]></description>
	  	<name>onmouseover</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when a pointer input element is released over input element.]]></description>
	  	<name>onmouseup</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Client side callback to execute when text within input element is selected by user.]]></description>
	  	<name>onselect</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The placeholder attribute shows text in a field until the field is focused upon, then hides the text.]]></description>
	  	<name>placeholder</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Flag indicating that this input element will prevent changes by the user.]]></description>
	  	<name>readonly</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Allows you to suppress automatic rendering of labels. Used by AngularFaces, too.]]></description>
	  	<name>renderLabel</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
	  	<name>rendered</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Boolean value Require input in the component when the form is submitted.]]></description>
	  	<name>required</name>
	  	<required>false</required>
	  	<type>Boolean</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Message to show if the user did not specify a value and the attribute required is set to true.]]></description>
	  	<name>requiredMessage</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Number of characters used to determine the width of the input element.]]></description>
	  	<name>size</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The size of the input specified as number of grid columns.]]></description>
	  	<name>span</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Inline style of the input element.]]></description>
	  	<name>style</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Style class of the input element.]]></description>
	  	<name>styleClass</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Advisory tooltip information.]]></description>
	  	<name>tabindex</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Advisory tooltip information.]]></description>
	  	<name>title</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The text of the tooltip.]]></description>
	  	<name>tooltip</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The tooltip is shown and hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).]]></description>
	  	<name>tooltipDelay</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The tooltip is hidden with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).]]></description>
	  	<name>tooltipDelayHide</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[The tooltip is shown with a delay. This value is the delay in milliseconds. Defaults to 0 (no delay).]]></description>
	  	<name>tooltipDelayShow</name>
	  	<required>false</required>
	  	<type>Integer</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Where is the tooltip to be displayed? Possible values: "top", "bottom", "right", "left", "auto", "auto top", "auto bottom", "auto right" and "auto left". Default to "bottom".]]></description>
	  	<name>tooltipPosition</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Type of the input. The default is text.]]></description>
	  	<name>type</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[A method expression referring to a method validationg the input.]]></description>
	  	<name>validator</name>
	  	<required>false</required>
	  	<type>javax.faces.validator.Validator</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Message to display when validation fails.]]></description>
	  	<name>validatorMessage</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[Value.]]></description>
	  	<name>value</name>
	  	<required>false</required>
	  	<type>java.lang.String</type>
	  </attribute>
	  <attribute>
	  	<description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
	  	<name>valueChangeListener</name>
	  	<required>false</required>
	  	<type>javax.faces.event.ValueChangeListener</type>
	  </attribute>
	</tag>

</facelet-taglib>
